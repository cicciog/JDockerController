{"docker":[{"name":"FROM","lineno":1,"args":"alpine:3.10","raw":"FROM alpine:3.10"},{"name":"ARG","lineno":4,"args":["VAULT_VERSION=1.4.0-rc1"],"raw":"ARG VAULT_VERSION=1.4.0-rc1"},{"name":"RUN","lineno":9,"args":"addgroup vault &&     adduser -S -G vault vault","raw":"RUN addgroup vault &&     adduser -S -G vault vault"},{"name":"RUN","lineno":46,"args":"set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg","raw":"RUN set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"},{"name":"RUN","lineno":56,"args":"mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault","raw":"RUN mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"},{"name":"VOLUME","lineno":60,"args":["/vault/logs"],"raw":"VOLUME /vault/logs"},{"name":"VOLUME","lineno":64,"args":["/vault/file"],"raw":"VOLUME /vault/file"},{"name":"EXPOSE","lineno":68,"args":["8200"],"raw":"EXPOSE 8200"},{"name":"COPY","lineno":75,"args":["docker-entrypoint.sh","/usr/local/bin/docker-entrypoint.sh"],"raw":"COPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh"},{"name":"ENTRYPOINT","lineno":76,"args":["docker-entrypoint.sh"],"raw":"ENTRYPOINT [\"docker-entrypoint.sh\"]"},{"name":"CMD","lineno":80,"args":["server","-dev"],"raw":"CMD [\"server\", \"-dev\"]"}]}