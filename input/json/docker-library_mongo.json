{"docker":[{"name":"FROM","lineno":1,"args":"ubuntu:bionic","raw":"FROM ubuntu:bionic"},{"name":"RUN","lineno":4,"args":"groupadd -r mongodb && useradd -r -g mongodb mongodb","raw":"RUN groupadd -r mongodb && useradd -r -g mongodb mongodb"},{"name":"RUN","lineno":16,"args":"set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tjq \t\tnumactl \t; \tif ! command -v ps > /dev/null; then \t\tapt-get install -y --no-install-recommends procps; \tfi; \trm -rf /var/lib/apt/lists/*","raw":"RUN set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tjq \t\tnumactl \t; \tif ! command -v ps > /dev/null; then \t\tapt-get install -y --no-install-recommends procps; \tfi; \trm -rf /var/lib/apt/lists/*"},{"name":"ENV","lineno":19,"args":{"GOSU_VERSION":"1.11"},"raw":"ENV GOSU_VERSION 1.11"},{"name":"ENV","lineno":21,"args":{"JSYAML_VERSION":"3.13.0"},"raw":"ENV JSYAML_VERSION 3.13.0"},{"name":"RUN","lineno":34,"args":"set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends \t\twget \t; \tif ! command -v gpg > /dev/null; then \t\tapt-get install -y --no-install-recommends gnupg dirmngr; \t\tsavedAptMark=\"$savedAptMark gnupg dirmngr\"; \telif gpg --version | grep -q '^gpg (GnuPG) 1\\.'; then # \"This package provides support for HKPS keyservers.\" (GnuPG 1.x only)","raw":"RUN set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends \t\twget \t; \tif ! command -v gpg > /dev/null; then \t\tapt-get install -y --no-install-recommends gnupg dirmngr; \t\tsavedAptMark=\"$savedAptMark gnupg dirmngr\"; \telif gpg --version | grep -q '^gpg (GnuPG) 1\\.'; then # \"This package provides support for HKPS keyservers.\" (GnuPG 1.x only)"},{"name":"APT-GET","lineno":52,"args":"install -y --no-install-recommends gnupg-curl; \tfi; \trm -rf /var/lib/apt/lists/*; \t\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tcommand -v gpgconf && gpgconf --kill all || :; \trm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true; \t\twget -O /js-yaml.js \"https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js\"; # TODO some sort of download verification here","raw":"apt-get install -y --no-install-recommends gnupg-curl; \tfi; \trm -rf /var/lib/apt/lists/*; \t\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tcommand -v gpgconf && gpgconf --kill all || :; \trm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true; \t\twget -O /js-yaml.js \"https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js\"; # TODO some sort of download verification here"},{"name":"APT-MARK","lineno":56,"args":"auto '.*' > /dev/null; \tapt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false","raw":"apt-mark auto '.*' > /dev/null; \tapt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false"},{"name":"RUN","lineno":58,"args":"mkdir /docker-entrypoint-initdb.d","raw":"RUN mkdir /docker-entrypoint-initdb.d"},{"name":"ENV","lineno":60,"args":{"GPG_KEYS":"E162F504A20CDF15827F718D4B7C549A058F8B6B"},"raw":"ENV GPG_KEYS E162F504A20CDF15827F718D4B7C549A058F8B6B"},{"name":"RUN","lineno":69,"args":"set -ex; \texport GNUPGHOME=\"$(mktemp -d)\"; \tfor key in $GPG_KEYS; do \t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tdone; \tgpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg; \tcommand -v gpgconf && gpgconf --kill all || :; \trm -r \"$GNUPGHOME\"; \tapt-key list","raw":"RUN set -ex; \texport GNUPGHOME=\"$(mktemp -d)\"; \tfor key in $GPG_KEYS; do \t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tdone; \tgpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg; \tcommand -v gpgconf && gpgconf --kill all || :; \trm -r \"$GNUPGHOME\"; \tapt-key list"},{"name":"ARG","lineno":75,"args":["MONGO_PACKAGE=mongodb-org"],"raw":"ARG MONGO_PACKAGE=mongodb-org"},{"name":"ARG","lineno":76,"args":["MONGO_REPO=repo.mongodb.org"],"raw":"ARG MONGO_REPO=repo.mongodb.org"},{"name":"ENV","lineno":77,"args":{"MONGO_PACKAGE":"${MONGO_PACKAGE}","MONGO_REPO":"${MONGO_REPO}"},"raw":"ENV MONGO_PACKAGE=${MONGO_PACKAGE} MONGO_REPO=${MONGO_REPO}"},{"name":"ENV","lineno":79,"args":{"MONGO_MAJOR":"4.2"},"raw":"ENV MONGO_MAJOR 4.2"},{"name":"ENV","lineno":80,"args":{"MONGO_VERSION":"4.2.5"},"raw":"ENV MONGO_VERSION 4.2.5"},{"name":"RUN","lineno":82,"args":"echo \"deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse\" | tee \"/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list\"","raw":"RUN echo \"deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse\" | tee \"/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list\""},{"name":"RUN","lineno":85,"args":"set -x # installing \"mongodb-enterprise\" pulls in \"tzdata\" which prompts for input","raw":"RUN set -x # installing \"mongodb-enterprise\" pulls in \"tzdata\" which prompts for input"},{"name":"&&","lineno":96,"args":"export DEBIAN_FRONTEND=noninteractive \t&& apt-get update \t&& apt-get install -y \t\t${MONGO_PACKAGE}=$MONGO_VERSION \t\t${MONGO_PACKAGE}-server=$MONGO_VERSION \t\t${MONGO_PACKAGE}-shell=$MONGO_VERSION \t\t${MONGO_PACKAGE}-mongos=$MONGO_VERSION \t\t${MONGO_PACKAGE}-tools=$MONGO_VERSION \t&& rm -rf /var/lib/apt/lists/* \t&& rm -rf /var/lib/mongodb \t&& mv /etc/mongod.conf /etc/mongod.conf.orig","raw":"&& export DEBIAN_FRONTEND=noninteractive \t&& apt-get update \t&& apt-get install -y \t\t${MONGO_PACKAGE}=$MONGO_VERSION \t\t${MONGO_PACKAGE}-server=$MONGO_VERSION \t\t${MONGO_PACKAGE}-shell=$MONGO_VERSION \t\t${MONGO_PACKAGE}-mongos=$MONGO_VERSION \t\t${MONGO_PACKAGE}-tools=$MONGO_VERSION \t&& rm -rf /var/lib/apt/lists/* \t&& rm -rf /var/lib/mongodb \t&& mv /etc/mongod.conf /etc/mongod.conf.orig"},{"name":"RUN","lineno":99,"args":"mkdir -p /data/db /data/configdb \t&& chown -R mongodb:mongodb /data/db /data/configdb","raw":"RUN mkdir -p /data/db /data/configdb \t&& chown -R mongodb:mongodb /data/db /data/configdb"},{"name":"VOLUME","lineno":100,"args":["/data/db","/data/configdb"],"raw":"VOLUME /data/db /data/configdb"},{"name":"COPY","lineno":102,"args":["docker-entrypoint.sh","/usr/local/bin/"],"raw":"COPY docker-entrypoint.sh /usr/local/bin/"},{"name":"ENTRYPOINT","lineno":103,"args":["docker-entrypoint.sh"],"raw":"ENTRYPOINT [\"docker-entrypoint.sh\"]"},{"name":"EXPOSE","lineno":105,"args":["27017"],"raw":"EXPOSE 27017"},{"name":"CMD","lineno":106,"args":["mongod"],"raw":"CMD [\"mongod\"]"}]}