{"docker":[{"name":"FROM","lineno":1,"args":"alpine:3.9","raw":"FROM alpine:3.9"},{"name":"MAINTAINER","lineno":2,"args":"Consul Team <consul@hashicorp.com>","raw":"MAINTAINER Consul Team <consul@hashicorp.com>"},{"name":"ENV","lineno":5,"args":{"CONSUL_VERSION":"1.7.2"},"raw":"ENV CONSUL_VERSION=1.7.2"},{"name":"ENV","lineno":8,"args":{"HASHICORP_RELEASES":"https://releases.hashicorp.com"},"raw":"ENV HASHICORP_RELEASES=https://releases.hashicorp.com"},{"name":"RUN","lineno":13,"args":"addgroup consul &&     adduser -S -G consul consul","raw":"RUN addgroup consul &&     adduser -S -G consul consul"},{"name":"RUN","lineno":40,"args":"set -eux &&     apk add --no-cache ca-certificates curl dumb-init gnupg libcap openssl su-exec iputils jq libc6-compat &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     apkArch=\"$(apk --print-arch)\" &&     case \"${apkArch}\" in         aarch64) consulArch='arm64' ;;         armhf) consulArch='armhfv6' ;;         x86) consulArch='386' ;;         x86_64) consulArch='amd64' ;;         *) echo >&2 \"error: unsupported architecture: ${apkArch} (see ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/)\" && exit 1 ;;     esac &&     wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_${consulArch}.zip &&     wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_SHA256SUMS &&     wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify consul_${CONSUL_VERSION}_SHA256SUMS.sig consul_${CONSUL_VERSION}_SHA256SUMS &&     grep consul_${CONSUL_VERSION}_linux_${consulArch}.zip consul_${CONSUL_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin consul_${CONSUL_VERSION}_linux_${consulArch}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg && # tiny smoke test to ensure the binary we downloaded runs","raw":"RUN set -eux &&     apk add --no-cache ca-certificates curl dumb-init gnupg libcap openssl su-exec iputils jq libc6-compat &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     apkArch=\"$(apk --print-arch)\" &&     case \"${apkArch}\" in         aarch64) consulArch='arm64' ;;         armhf) consulArch='armhfv6' ;;         x86) consulArch='386' ;;         x86_64) consulArch='amd64' ;;         *) echo >&2 \"error: unsupported architecture: ${apkArch} (see ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/)\" && exit 1 ;;     esac &&     wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_${consulArch}.zip &&     wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_SHA256SUMS &&     wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify consul_${CONSUL_VERSION}_SHA256SUMS.sig consul_${CONSUL_VERSION}_SHA256SUMS &&     grep consul_${CONSUL_VERSION}_linux_${consulArch}.zip consul_${CONSUL_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin consul_${CONSUL_VERSION}_linux_${consulArch}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg && # tiny smoke test to ensure the binary we downloaded runs"},{"name":"CONSUL","lineno":41,"args":"version","raw":"consul version"},{"name":"RUN","lineno":48,"args":"mkdir -p /consul/data &&     mkdir -p /consul/config &&     chown -R consul:consul /consul","raw":"RUN mkdir -p /consul/data &&     mkdir -p /consul/config &&     chown -R consul:consul /consul"},{"name":"RUN","lineno":52,"args":"test -e /etc/nsswitch.conf || echo 'hosts: files dns' > /etc/nsswitch.conf","raw":"RUN test -e /etc/nsswitch.conf || echo 'hosts: files dns' > /etc/nsswitch.conf"},{"name":"VOLUME","lineno":55,"args":["/consul/data"],"raw":"VOLUME /consul/data"},{"name":"EXPOSE","lineno":59,"args":["8300"],"raw":"EXPOSE 8300"},{"name":"EXPOSE","lineno":64,"args":["8301","8301/udp","8302","8302/udp"],"raw":"EXPOSE 8301 8301/udp 8302 8302/udp"},{"name":"EXPOSE","lineno":68,"args":["8500","8600","8600/udp"],"raw":"EXPOSE 8500 8600 8600/udp"},{"name":"COPY","lineno":73,"args":["docker-entrypoint.sh","/usr/local/bin/docker-entrypoint.sh"],"raw":"COPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh"},{"name":"ENTRYPOINT","lineno":74,"args":["docker-entrypoint.sh"],"raw":"ENTRYPOINT [\"docker-entrypoint.sh\"]"},{"name":"CMD","lineno":79,"args":["agent","-dev","-client","0.0.0.0"],"raw":"CMD [\"agent\", \"-dev\", \"-client\", \"0.0.0.0\"]"}]}