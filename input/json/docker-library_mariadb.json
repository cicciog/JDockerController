{"docker":[{"name":"FROM","lineno":2,"args":"ubuntu:bionic","raw":"FROM ubuntu:bionic"},{"name":"RUN","lineno":5,"args":"groupadd -r mysql && useradd -r -g mysql mysql","raw":"RUN groupadd -r mysql && useradd -r -g mysql mysql"},{"name":"RUN","lineno":14,"args":"set -ex; \tapt-get update; \tif ! which gpg; then \t\tapt-get install -y --no-install-recommends gnupg; \tfi; \tif ! gpg --version | grep -q '^gpg (GnuPG) 1\\.'; then # Ubuntu includes \"gnupg\" (not \"gnupg2\", but still 2.x), but not dirmngr, and gnupg 2.x requires dirmngr","raw":"RUN set -ex; \tapt-get update; \tif ! which gpg; then \t\tapt-get install -y --no-install-recommends gnupg; \tfi; \tif ! gpg --version | grep -q '^gpg (GnuPG) 1\\.'; then # Ubuntu includes \"gnupg\" (not \"gnupg2\", but still 2.x), but not dirmngr, and gnupg 2.x requires dirmngr"},{"name":"APT-GET","lineno":18,"args":"install -y --no-install-recommends dirmngr; \tfi; \trm -rf /var/lib/apt/lists/*","raw":"apt-get install -y --no-install-recommends dirmngr; \tfi; \trm -rf /var/lib/apt/lists/*"},{"name":"ENV","lineno":21,"args":{"GOSU_VERSION":"1.10"},"raw":"ENV GOSU_VERSION 1.10"},{"name":"RUN","lineno":36,"args":"set -ex; \t\tfetchDeps=' \t\tca-certificates \t\twget \t'; \tapt-get update; \tapt-get install -y --no-install-recommends $fetchDeps; \trm -rf /var/lib/apt/lists/*; \t\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \t# verify the signature","raw":"RUN set -ex; \t\tfetchDeps=' \t\tca-certificates \t\twget \t'; \tapt-get update; \tapt-get install -y --no-install-recommends $fetchDeps; \trm -rf /var/lib/apt/lists/*; \t\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \t# verify the signature"},{"name":"EXPORT","lineno":44,"args":"GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tcommand -v gpgconf > /dev/null && gpgconf --kill all || :; \trm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \t\tchmod +x /usr/local/bin/gosu; # verify that the binary works","raw":"export GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tcommand -v gpgconf > /dev/null && gpgconf --kill all || :; \trm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \t\tchmod +x /usr/local/bin/gosu; # verify that the binary works"},{"name":"GOSU","lineno":47,"args":"nobody true; \t\tapt-get purge -y --auto-remove $fetchDeps","raw":"gosu nobody true; \t\tapt-get purge -y --auto-remove $fetchDeps"},{"name":"RUN","lineno":49,"args":"mkdir /docker-entrypoint-initdb.d","raw":"RUN mkdir /docker-entrypoint-initdb.d"},{"name":"RUN","lineno":61,"args":"set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tpwgen \t\ttzdata \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*","raw":"RUN set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tpwgen \t\ttzdata \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"},{"name":"ENV","lineno":64,"args":{"GPG_KEYS":"# pub rsa4096 2016-03-30 [SC]"},"raw":"ENV GPG_KEYS # pub   rsa4096 2016-03-30 [SC]"},{"name":"177F4010FE56CA3336300305F1656F24C74CD1D8","lineno":68,"args":"","raw":"177F4010FE56CA3336300305F1656F24C74CD1D8"},{"name":"RUN","lineno":77,"args":"set -ex; \texport GNUPGHOME=\"$(mktemp -d)\"; \tfor key in $GPG_KEYS; do \t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tdone; \tgpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all || :; \trm -r \"$GNUPGHOME\"; \tapt-key list","raw":"RUN set -ex; \texport GNUPGHOME=\"$(mktemp -d)\"; \tfor key in $GPG_KEYS; do \t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tdone; \tgpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all || :; \trm -r \"$GNUPGHOME\"; \tapt-key list"},{"name":"ENV","lineno":80,"args":{"MARIADB_MAJOR":"10.3"},"raw":"ENV MARIADB_MAJOR 10.3"},{"name":"ENV","lineno":81,"args":{"MARIADB_VERSION":"1:10.3.22+maria~bionic"},"raw":"ENV MARIADB_VERSION 1:10.3.22+maria~bionic"},{"name":"RUN","lineno":91,"args":"set -e;\techo \"deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main\" > /etc/apt/sources.list.d/mariadb.list; \t{ \t\techo 'Package: *'; \t\techo 'Pin: release o=MariaDB'; \t\techo 'Pin-Priority: 999'; \t} > /etc/apt/preferences.d/mariadb","raw":"RUN set -e;\techo \"deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main\" > /etc/apt/sources.list.d/mariadb.list; \t{ \t\techo 'Package: *'; \t\techo 'Pin: release o=MariaDB'; \t\techo 'Pin-Priority: 999'; \t} > /etc/apt/preferences.d/mariadb"},{"name":"RUN","lineno":105,"args":"set -ex; \t{ \t\techo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password password 'unused'; \t\techo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password_again password 'unused'; \t} | debconf-set-selections; \tapt-get update; \tapt-get install -y \t\t\"mariadb-server=$MARIADB_VERSION\" # mariadb-backup is installed at the same time so that `mysql-common` is only installed once from just mariadb repos","raw":"RUN set -ex; \t{ \t\techo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password password 'unused'; \t\techo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password_again password 'unused'; \t} | debconf-set-selections; \tapt-get update; \tapt-get install -y \t\t\"mariadb-server=$MARIADB_VERSION\" # mariadb-backup is installed at the same time so that `mysql-common` is only installed once from just mariadb repos"},{"name":"MARIADB-BACKUP","lineno":110,"args":"socat \t; \trm -rf /var/lib/apt/lists/*; # comment out any \"user\" entires in the MySQL config (\"docker-entrypoint.sh\" or \"--user\" will handle user switching)","raw":"mariadb-backup \t\tsocat \t; \trm -rf /var/lib/apt/lists/*; # comment out any \"user\" entires in the MySQL config (\"docker-entrypoint.sh\" or \"--user\" will handle user switching)"},{"name":"SED","lineno":112,"args":"-ri 's/^user\\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/*; # purge and re-create /var/lib/mysql with appropriate ownership","raw":"sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/*; # purge and re-create /var/lib/mysql with appropriate ownership"},{"name":"RM","lineno":116,"args":"-rf /var/lib/mysql; \tmkdir -p /var/lib/mysql /var/run/mysqld; \tchown -R mysql:mysql /var/lib/mysql /var/run/mysqld; # ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime","raw":"rm -rf /var/lib/mysql; \tmkdir -p /var/lib/mysql /var/run/mysqld; \tchown -R mysql:mysql /var/lib/mysql /var/run/mysqld; # ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime"},{"name":"CHMOD","lineno":118,"args":"777 /var/run/mysqld; # comment out a few problematic configuration values","raw":"chmod 777 /var/run/mysqld; # comment out a few problematic configuration values"},{"name":"FIND","lineno":122,"args":"/etc/mysql/ -name '*.cnf' -print0 \t\t| xargs -0 grep -lZE '^(bind-address|log)' \t\t| xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'; # don't reverse lookup hostnames, they are usually another container","raw":"find /etc/mysql/ -name '*.cnf' -print0 \t\t| xargs -0 grep -lZE '^(bind-address|log)' \t\t| xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'; # don't reverse lookup hostnames, they are usually another container"},{"name":"ECHO","lineno":123,"args":"'[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf","raw":"echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf"},{"name":"VOLUME","lineno":125,"args":["/var/lib/mysql"],"raw":"VOLUME /var/lib/mysql"},{"name":"COPY","lineno":127,"args":["docker-entrypoint.sh","/usr/local/bin/"],"raw":"COPY docker-entrypoint.sh /usr/local/bin/"},{"name":"RUN","lineno":128,"args":"ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat","raw":"RUN ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"},{"name":"ENTRYPOINT","lineno":129,"args":["docker-entrypoint.sh"],"raw":"ENTRYPOINT [\"docker-entrypoint.sh\"]"},{"name":"EXPOSE","lineno":131,"args":["3306"],"raw":"EXPOSE 3306"},{"name":"CMD","lineno":132,"args":["mysqld"],"raw":"CMD [\"mysqld\"]"}]}