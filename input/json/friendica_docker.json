{"docker":[{"name":"FROM","lineno":2,"args":"php:7.3-apache-stretch","raw":"FROM php:7.3-apache-stretch"},{"name":"RUN","lineno":12,"args":"set -ex;         apt-get update;     apt-get install -y --no-install-recommends         rsync         bzip2         git # For mail() support","raw":"RUN set -ex;         apt-get update;     apt-get install -y --no-install-recommends         rsync         bzip2         git # For mail() support"},{"name":"SSMTP","lineno":14,"args":"# For tini installation","raw":"ssmtp # For tini installation"},{"name":"GNUPG","lineno":17,"args":"dirmngr     ;     rm -rf /var/lib/apt/lists/*;","raw":"gnupg dirmngr     ;     rm -rf /var/lib/apt/lists/*;"},{"name":"ENV","lineno":20,"args":{"TINI_VERSION":"v0.18.0"},"raw":"ENV TINI_VERSION v0.18.0"},{"name":"RUN","lineno":26,"args":"export BUILD_ARCH=$(dpkg-architecture --query DEB_BUILD_ARCH)  && curl -L -o /sbin/tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${BUILD_ARCH}  && curl -L -o /tini.asc https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${BUILD_ARCH}.asc  && gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7  && gpg --batch --verify /tini.asc /sbin/tini  && chmod +x /sbin/tini","raw":"RUN export BUILD_ARCH=$(dpkg-architecture --query DEB_BUILD_ARCH)  && curl -L -o /sbin/tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${BUILD_ARCH}  && curl -L -o /tini.asc https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${BUILD_ARCH}.asc  && gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7  && gpg --batch --verify /tini.asc /sbin/tini  && chmod +x /sbin/tini"},{"name":"RUN","lineno":71,"args":"set -ex;         savedAptMark=\"$(apt-mark showmanual)\";         apt-get update;     apt-get install -y --no-install-recommends         mysql-client         bash         libpng-dev         libjpeg62-turbo-dev         libtool         libmagick++-dev         libmemcached-dev         libgraphicsmagick1-dev         libfreetype6-dev         librsvg2-2         libzip-dev         libldap2-dev     ;             debMultiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\";         docker-php-ext-configure gd         --with-gd         --with-freetype-dir=/usr/include/         --with-png-dir=/usr/include/         --with-jpeg-dir=/usr/include/     ;     docker-php-ext-configure ldap         \t--with-libdir=lib/$debMultiarch/ \t;     docker-php-ext-install -j \"$(nproc)\"         pdo_mysql         gd         zip         opcache         ctype         pcntl         ldap     ;     # pecl will claim success even if one install fails, so we need to perform each install separately","raw":"RUN set -ex;         savedAptMark=\"$(apt-mark showmanual)\";         apt-get update;     apt-get install -y --no-install-recommends         mysql-client         bash         libpng-dev         libjpeg62-turbo-dev         libtool         libmagick++-dev         libmemcached-dev         libgraphicsmagick1-dev         libfreetype6-dev         librsvg2-2         libzip-dev         libldap2-dev     ;             debMultiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\";         docker-php-ext-configure gd         --with-gd         --with-freetype-dir=/usr/include/         --with-png-dir=/usr/include/         --with-jpeg-dir=/usr/include/     ;     docker-php-ext-configure ldap         \t--with-libdir=lib/$debMultiarch/ \t;     docker-php-ext-install -j \"$(nproc)\"         pdo_mysql         gd         zip         opcache         ctype         pcntl         ldap     ;     # pecl will claim success even if one install fails, so we need to perform each install separately"},{"name":"PECL","lineno":84,"args":"install apcu-5.1.18;     pecl install memcached-3.1.5;     pecl install redis-5.2.0;     pecl install imagick-3.4.4;         docker-php-ext-enable         apcu         memcached         redis         imagick     ;     # reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies","raw":"pecl install apcu-5.1.18;     pecl install memcached-3.1.5;     pecl install redis-5.2.0;     pecl install imagick-3.4.4;         docker-php-ext-enable         apcu         memcached         redis         imagick     ;     # reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies"},{"name":"APT-MARK","lineno":96,"args":"auto '.*' > /dev/null;     apt-mark manual $savedAptMark;     ldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so       | awk '/=>/ { print $3 }'       | sort -u       | xargs -r dpkg-query -S       | cut -d: -f1       | sort -u       | xargs -rt apt-mark manual;         apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;     rm -rf /var/lib/apt/lists/*","raw":"apt-mark auto '.*' > /dev/null;     apt-mark manual $savedAptMark;     ldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so       | awk '/=>/ { print $3 }'       | sort -u       | xargs -r dpkg-query -S       | cut -d: -f1       | sort -u       | xargs -rt apt-mark manual;         apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;     rm -rf /var/lib/apt/lists/*"},{"name":"RUN","lineno":119,"args":"set -ex;     {         echo 'opcache.enable=1' ;         echo 'opcache.interned_strings_buffer=8';         echo 'opcache.max_accelerated_files=10000';         echo 'opcache.memory_consumption=128';         echo 'opcache.save_comments=1';         echo 'opcache.revalidte_freq=1';     } > /usr/local/etc/php/conf.d/opcache-recommended.ini;         {         echo sendmail_path = \"/usr/sbin/sendmail -t -i\";     } > /usr/local/etc/php/conf.d/sendmail.ini;         echo 'apc.enable_cli=1' >> /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini;         echo 'memory_limit=512M' > /usr/local/etc/php/conf.d/memory-limit.ini;         mkdir /var/www/data;     chown -R www-data:root /var/www;     chmod -R g=u /var/www","raw":"RUN set -ex;     {         echo 'opcache.enable=1' ;         echo 'opcache.interned_strings_buffer=8';         echo 'opcache.max_accelerated_files=10000';         echo 'opcache.memory_consumption=128';         echo 'opcache.save_comments=1';         echo 'opcache.revalidte_freq=1';     } > /usr/local/etc/php/conf.d/opcache-recommended.ini;         {         echo sendmail_path = \"/usr/sbin/sendmail -t -i\";     } > /usr/local/etc/php/conf.d/sendmail.ini;         echo 'apc.enable_cli=1' >> /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini;         echo 'memory_limit=512M' > /usr/local/etc/php/conf.d/memory-limit.ini;         mkdir /var/www/data;     chown -R www-data:root /var/www;     chmod -R g=u /var/www"},{"name":"VOLUME","lineno":121,"args":["/var/www/html"],"raw":"VOLUME /var/www/html"},{"name":"RUN","lineno":131,"args":"set -ex;    a2enmod rewrite remoteip ;    {     echo RemoteIPHeader X-Real-IP ;     echo RemoteIPTrustedProxy 10.0.0.0/8 ;     echo RemoteIPTrustedProxy 172.16.0.0/12 ;     echo RemoteIPTrustedProxy 192.168.0.0/16 ;    } > /etc/apache2/conf-available/remoteip.conf;    a2enconf remoteip","raw":"RUN set -ex;    a2enmod rewrite remoteip ;    {     echo RemoteIPHeader X-Real-IP ;     echo RemoteIPTrustedProxy 10.0.0.0/8 ;     echo RemoteIPTrustedProxy 172.16.0.0/12 ;     echo RemoteIPTrustedProxy 192.168.0.0/16 ;    } > /etc/apache2/conf-available/remoteip.conf;    a2enconf remoteip"},{"name":"ENV","lineno":133,"args":{"FRIENDICA_VERSION":"2019.12"},"raw":"ENV FRIENDICA_VERSION 2019.12"},{"name":"ENV","lineno":134,"args":{"FRIENDICA_ADDONS":"2019.12"},"raw":"ENV FRIENDICA_ADDONS 2019.12"},{"name":"RUN","lineno":149,"args":"set -ex;     curl -fsSL -o friendica.tar.gz         \"https://github.com/friendica/friendica/archive/${FRIENDICA_VERSION}.tar.gz\";     tar -xzf friendica.tar.gz -C /usr/src/;     rm friendica.tar.gz;     mv -f /usr/src/friendica-${FRIENDICA_VERSION}/ /usr/src/friendica;     chmod 777 /usr/src/friendica/view/smarty3;     curl -fsSL -o friendica_addons.tar.gz         \"https://github.com/friendica/friendica-addons/archive/${FRIENDICA_ADDONS}.tar.gz\";     mkdir -p /usr/src/friendica/proxy;     mkdir -p /usr/src/friendica/addon;     tar -xzf friendica_addons.tar.gz -C /usr/src/friendica/addon --strip-components=1;     rm friendica_addons.tar.gz;     /usr/src/friendica/bin/composer.phar install --no-dev -d /usr/src/friendica;","raw":"RUN set -ex;     curl -fsSL -o friendica.tar.gz         \"https://github.com/friendica/friendica/archive/${FRIENDICA_VERSION}.tar.gz\";     tar -xzf friendica.tar.gz -C /usr/src/;     rm friendica.tar.gz;     mv -f /usr/src/friendica-${FRIENDICA_VERSION}/ /usr/src/friendica;     chmod 777 /usr/src/friendica/view/smarty3;     curl -fsSL -o friendica_addons.tar.gz         \"https://github.com/friendica/friendica-addons/archive/${FRIENDICA_ADDONS}.tar.gz\";     mkdir -p /usr/src/friendica/proxy;     mkdir -p /usr/src/friendica/addon;     tar -xzf friendica_addons.tar.gz -C /usr/src/friendica/addon --strip-components=1;     rm friendica_addons.tar.gz;     /usr/src/friendica/bin/composer.phar install --no-dev -d /usr/src/friendica;"},{"name":"COPY","lineno":151,"args":["*.sh","upgrade.exclude","/"],"raw":"COPY *.sh upgrade.exclude /"},{"name":"COPY","lineno":152,"args":["config/*","/usr/src/friendica/config/"],"raw":"COPY config/* /usr/src/friendica/config/"},{"name":"ENTRYPOINT","lineno":154,"args":["/entrypoint.sh"],"raw":"ENTRYPOINT [\"/entrypoint.sh\"]"},{"name":"CMD","lineno":155,"args":["apache2-foreground"],"raw":"CMD [\"apache2-foreground\"]"}]}