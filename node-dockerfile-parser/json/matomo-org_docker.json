{"docker":[{"name":"FROM","lineno":1,"args":"php:7.4-apache","raw":"FROM php:7.4-apache"},{"name":"LABEL","lineno":3,"args":{"maintainer":"\"pierre@piwik.org\""},"raw":"LABEL maintainer=\"pierre@piwik.org\""},{"name":"RUN","lineno":30,"args":"set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibfreetype6-dev \t\tlibjpeg-dev \t\tlibldap2-dev \t\tlibpng-dev \t\tlibzip-dev \t; \t\tdebMultiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\"; \tdocker-php-ext-configure gd --with-freetype --with-jpeg; \tdocker-php-ext-configure ldap --with-libdir=\"lib/$debMultiarch\"; \tdocker-php-ext-install -j \"$(nproc)\" \t\tgd \t\tldap \t\tmysqli \t\topcache \t\tpdo_mysql \t\tzip \t; \t# pecl will claim success even if one install fails, so we need to perform each install separately","raw":"RUN set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibfreetype6-dev \t\tlibjpeg-dev \t\tlibldap2-dev \t\tlibpng-dev \t\tlibzip-dev \t; \t\tdebMultiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\"; \tdocker-php-ext-configure gd --with-freetype --with-jpeg; \tdocker-php-ext-configure ldap --with-libdir=\"lib/$debMultiarch\"; \tdocker-php-ext-install -j \"$(nproc)\" \t\tgd \t\tldap \t\tmysqli \t\topcache \t\tpdo_mysql \t\tzip \t; \t# pecl will claim success even if one install fails, so we need to perform each install separately"},{"name":"PECL","lineno":39,"args":"install APCu-5.1.18; \tpecl install redis-4.3.0; \t\tdocker-php-ext-enable \t\tapcu \t\tredis \t; \t# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies","raw":"pecl install APCu-5.1.18; \tpecl install redis-4.3.0; \t\tdocker-php-ext-enable \t\tapcu \t\tredis \t; \t# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies"},{"name":"APT-MARK","lineno":51,"args":"auto '.*' > /dev/null; \tapt-mark manual $savedAptMark; \tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \t\t| awk '/=>/ { print $3 }' \t\t| sort -u \t\t| xargs -r dpkg-query -S \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -rt apt-mark manual; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*","raw":"apt-mark auto '.*' > /dev/null; \tapt-mark manual $savedAptMark; \tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \t\t| awk '/=>/ { print $3 }' \t\t| sort -u \t\t| xargs -r dpkg-query -S \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -rt apt-mark manual; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*"},{"name":"RUN","lineno":61,"args":"{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t} > /usr/local/etc/php/conf.d/opcache-recommended.ini","raw":"RUN { \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t} > /usr/local/etc/php/conf.d/opcache-recommended.ini"},{"name":"ENV","lineno":63,"args":{"MATOMO_VERSION":"3.13.4"},"raw":"ENV MATOMO_VERSION 3.13.4"},{"name":"RUN","lineno":87,"args":"set -ex; \tfetchDeps=\" \t\tdirmngr \t\tgnupg \t\"; \tapt-get update; \tapt-get install -y --no-install-recommends \t\t$fetchDeps \t; \t\tcurl -fsSL -o matomo.tar.gz \t\t\"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz\"; \tcurl -fsSL -o matomo.tar.gz.asc \t\t\"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 814E346FA01A20DBB04B6807B5DBD5925590A237; \tgpg --batch --verify matomo.tar.gz.asc matomo.tar.gz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" matomo.tar.gz.asc; \ttar -xzf matomo.tar.gz -C /usr/src/; \trm matomo.tar.gz; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps; \trm -rf /var/lib/apt/lists/*","raw":"RUN set -ex; \tfetchDeps=\" \t\tdirmngr \t\tgnupg \t\"; \tapt-get update; \tapt-get install -y --no-install-recommends \t\t$fetchDeps \t; \t\tcurl -fsSL -o matomo.tar.gz \t\t\"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz\"; \tcurl -fsSL -o matomo.tar.gz.asc \t\t\"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 814E346FA01A20DBB04B6807B5DBD5925590A237; \tgpg --batch --verify matomo.tar.gz.asc matomo.tar.gz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" matomo.tar.gz.asc; \ttar -xzf matomo.tar.gz -C /usr/src/; \trm matomo.tar.gz; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps; \trm -rf /var/lib/apt/lists/*"},{"name":"COPY","lineno":89,"args":["php.ini","/usr/local/etc/php/conf.d/php-matomo.ini"],"raw":"COPY php.ini /usr/local/etc/php/conf.d/php-matomo.ini"},{"name":"COPY","lineno":103,"args":["docker-entrypoint.sh","/entrypoint.sh"],"raw":"COPY docker-entrypoint.sh /entrypoint.sh"},{"name":"VOLUME","lineno":107,"args":["/var/www/html"],"raw":"VOLUME /var/www/html"},{"name":"ENTRYPOINT","lineno":109,"args":["/entrypoint.sh"],"raw":"ENTRYPOINT [\"/entrypoint.sh\"]"},{"name":"CMD","lineno":110,"args":["apache2-foreground"],"raw":"CMD [\"apache2-foreground\"]"}]}