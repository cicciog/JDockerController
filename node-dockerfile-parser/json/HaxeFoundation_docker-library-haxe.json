{"docker":[{"name":"FROM","lineno":7,"args":"alpine:3.11","raw":"FROM alpine:3.11"},{"name":"ENV","lineno":10,"args":{"PATH":"/usr/local/bin:$PATH"},"raw":"ENV PATH /usr/local/bin:$PATH"},{"name":"RUN","lineno":14,"args":"apk add --no-cache ca-certificates","raw":"RUN apk add --no-cache ca-certificates"},{"name":"ENV","lineno":16,"args":{"NEKO_VERSION":"2.3.0"},"raw":"ENV NEKO_VERSION 2.3.0"},{"name":"ENV","lineno":17,"args":{"HAXE_VERSION":"4.0.5"},"raw":"ENV HAXE_VERSION 4.0.5"},{"name":"ENV","lineno":18,"args":{"HAXE_STD_PATH":"/usr/local/share/haxe/std"},"raw":"ENV HAXE_STD_PATH /usr/local/share/haxe/std"},{"name":"RUN","lineno":92,"args":"set -ex \t&& apk add --no-cache --virtual .fetch-deps \t\tlibressl \t\ttar \t\tgit \t\t&& wget -O neko.tar.gz \"https://github.com/HaxeFoundation/neko/archive/v2-3-0/neko-2.3.0.tar.gz\" \t&& echo \"850e7e317bdaf24ed652efeff89c1cb21380ca19f20e68a296c84f6bad4ee995 *neko.tar.gz\" | sha256sum -c - \t&& mkdir -p /usr/src/neko \t&& tar -xC /usr/src/neko --strip-components=1 -f neko.tar.gz \t&& rm neko.tar.gz \t&& apk add --no-cache --virtual .neko-build-deps \t\tapache2-dev \t\tcmake \t\tgc-dev \t\tgcc \t\tgtk+2.0-dev \t\tlibc-dev \t\tlinux-headers \t\tmariadb-dev \t\tmbedtls-dev \t\tninja \t\tsqlite-dev \t&& cd /usr/src/neko \t&& cmake -GNinja -DNEKO_JIT_DISABLE=ON -DRELOCATABLE=OFF -DRUN_LDCONFIG=OFF . \t&& ninja \t&& ninja install \t\t&& git clone --recursive --depth 1 --branch 4.0.5 \"https://github.com/HaxeFoundation/haxe.git\" /usr/src/haxe \t&& cd /usr/src/haxe \t&& apk add --no-cache --virtual .haxe-build-deps \t\tpcre-dev \t\tzlib-dev \t\tmake \t\t\t\topam \t\taspcud \t\tm4 \t\tunzip \t\tpatch \t\tmusl-dev \t\t\t\t\t\tocaml-compiler-libs \t\tocaml-ocamldoc \t\t\t\t&& opam init --disable-sandboxing \t&& eval $(opam env) \t&& opam pin add haxe . --no-action \t&& opam install haxe --deps-only --yes \t&& make all tools \t\t&& mkdir -p /usr/local/bin \t&& cp haxe haxelib /usr/local/bin \t&& mkdir -p $HAXE_STD_PATH \t&& cp -r std/* $HAXE_STD_PATH \t&& mkdir -p /haxelib \t&& cd / && haxelib setup /haxelib \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\" \t&& apk add --virtual .haxe-rundeps $runDeps \t&& apk del .fetch-deps .neko-build-deps .haxe-build-deps \t\t&& rm -rf ~/.opam \t\t&& rm -rf /usr/src/neko /usr/src/haxe","raw":"RUN set -ex \t&& apk add --no-cache --virtual .fetch-deps \t\tlibressl \t\ttar \t\tgit \t\t&& wget -O neko.tar.gz \"https://github.com/HaxeFoundation/neko/archive/v2-3-0/neko-2.3.0.tar.gz\" \t&& echo \"850e7e317bdaf24ed652efeff89c1cb21380ca19f20e68a296c84f6bad4ee995 *neko.tar.gz\" | sha256sum -c - \t&& mkdir -p /usr/src/neko \t&& tar -xC /usr/src/neko --strip-components=1 -f neko.tar.gz \t&& rm neko.tar.gz \t&& apk add --no-cache --virtual .neko-build-deps \t\tapache2-dev \t\tcmake \t\tgc-dev \t\tgcc \t\tgtk+2.0-dev \t\tlibc-dev \t\tlinux-headers \t\tmariadb-dev \t\tmbedtls-dev \t\tninja \t\tsqlite-dev \t&& cd /usr/src/neko \t&& cmake -GNinja -DNEKO_JIT_DISABLE=ON -DRELOCATABLE=OFF -DRUN_LDCONFIG=OFF . \t&& ninja \t&& ninja install \t\t&& git clone --recursive --depth 1 --branch 4.0.5 \"https://github.com/HaxeFoundation/haxe.git\" /usr/src/haxe \t&& cd /usr/src/haxe \t&& apk add --no-cache --virtual .haxe-build-deps \t\tpcre-dev \t\tzlib-dev \t\tmake \t\t\t\topam \t\taspcud \t\tm4 \t\tunzip \t\tpatch \t\tmusl-dev \t\t\t\t\t\tocaml-compiler-libs \t\tocaml-ocamldoc \t\t\t\t&& opam init --disable-sandboxing \t&& eval $(opam env) \t&& opam pin add haxe . --no-action \t&& opam install haxe --deps-only --yes \t&& make all tools \t\t&& mkdir -p /usr/local/bin \t&& cp haxe haxelib /usr/local/bin \t&& mkdir -p $HAXE_STD_PATH \t&& cp -r std/* $HAXE_STD_PATH \t&& mkdir -p /haxelib \t&& cd / && haxelib setup /haxelib \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\" \t&& apk add --virtual .haxe-rundeps $runDeps \t&& apk del .fetch-deps .neko-build-deps .haxe-build-deps \t\t&& rm -rf ~/.opam \t\t&& rm -rf /usr/src/neko /usr/src/haxe"},{"name":"CMD","lineno":94,"args":["haxe"],"raw":"CMD [\"haxe\"]"}]}