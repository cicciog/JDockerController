{"docker":[{"name":"FROM","lineno":7,"args":"alpine:3.11","raw":"FROM alpine:3.11"},{"name":"ENV","lineno":20,"args":{"PHPIZE_DEPS":"autoconf dpkg-dev dpkg file g++ gcc libc-dev make pkgconf re2c"},"raw":"ENV PHPIZE_DEPS \t\tautoconf \t\tdpkg-dev dpkg \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkgconf \t\tre2c"},{"name":"RUN","lineno":28,"args":"apk add --no-cache \t\tca-certificates \t\tcurl \t\ttar \t\txz # https://github.com/docker-library/php/issues/494","raw":"RUN apk add --no-cache \t\tca-certificates \t\tcurl \t\ttar \t\txz # https://github.com/docker-library/php/issues/494"},{"name":"OPENSSL","lineno":29,"args":"","raw":"openssl"},{"name":"RUN","lineno":34,"args":"set -eux; \taddgroup -g 82 -S www-data; \tadduser -u 82 -D -S -G www-data www-data","raw":"RUN set -eux; \taddgroup -g 82 -S www-data; \tadduser -u 82 -D -S -G www-data www-data"},{"name":"H=3.9-STABLE","lineno":37,"args":"","raw":"h=3.9-stable"},{"name":"H=3.9-STABLE","lineno":39,"args":"","raw":"h=3.9-stable"},{"name":"H=3.9-STABLE","lineno":41,"args":"","raw":"h=3.9-stable"},{"name":"ENV","lineno":43,"args":{"PHP_INI_DIR":"/usr/local/etc/php"},"raw":"ENV PHP_INI_DIR /usr/local/etc/php"},{"name":"RUN","lineno":46,"args":"set -eux; \tmkdir -p \"$PHP_INI_DIR/conf.d\"; # allow running as an arbitrary user (https://github.com/docker-library/php/issues/743)","raw":"RUN set -eux; \tmkdir -p \"$PHP_INI_DIR/conf.d\"; # allow running as an arbitrary user (https://github.com/docker-library/php/issues/743)"},{"name":"[","lineno":50,"args":"! -d /var/www/html ]; \tmkdir -p /var/www/html; \tchown www-data:www-data /var/www/html; \tchmod 777 /var/www/html","raw":"[ ! -d /var/www/html ]; \tmkdir -p /var/www/html; \tchown www-data:www-data /var/www/html; \tchmod 777 /var/www/html"},{"name":"ENV","lineno":62,"args":{"PHP_CFLAGS":"\"-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\""},"raw":"ENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\""},{"name":"ENV","lineno":63,"args":{"PHP_CPPFLAGS":"\"$PHP_CFLAGS\""},"raw":"ENV PHP_CPPFLAGS=\"$PHP_CFLAGS\""},{"name":"ENV","lineno":64,"args":{"PHP_LDFLAGS":"\"-Wl,-O1 -Wl,--hash-style=both -pie\""},"raw":"ENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\""},{"name":"ENV","lineno":66,"args":{"GPG_KEYS":"42670A7FE4D0441C8E4632349E4FDC074A4EF02D 5A52880781F755608BF815FC910DEB46F53EA312"},"raw":"ENV GPG_KEYS 42670A7FE4D0441C8E4632349E4FDC074A4EF02D 5A52880781F755608BF815FC910DEB46F53EA312"},{"name":"ENV","lineno":68,"args":{"PHP_VERSION":"7.4.4"},"raw":"ENV PHP_VERSION 7.4.4"},{"name":"ENV","lineno":69,"args":{"PHP_URL":"\"https://www.php.net/get/php-7.4.4.tar.xz/from/this/mirror\"","PHP_ASC_URL":"\"https://www.php.net/get/php-7.4.4.tar.xz.asc/from/this/mirror\""},"raw":"ENV PHP_URL=\"https://www.php.net/get/php-7.4.4.tar.xz/from/this/mirror\" PHP_ASC_URL=\"https://www.php.net/get/php-7.4.4.tar.xz.asc/from/this/mirror\""},{"name":"ENV","lineno":70,"args":{"PHP_SHA256":"\"1873c4cefdd3df9a78dcffb2198bba5c2f0464f55c9c960720c84df483fca74c\"","PHP_MD5":"\"\""},"raw":"ENV PHP_SHA256=\"1873c4cefdd3df9a78dcffb2198bba5c2f0464f55c9c960720c84df483fca74c\" PHP_MD5=\"\""},{"name":"RUN","lineno":99,"args":"set -eux; \t\tapk add --no-cache --virtual .fetch-deps gnupg; \t\tmkdir -p /usr/src; \tcd /usr/src; \t\tcurl -fsSL -o php.tar.xz \"$PHP_URL\"; \t\tif [ -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\" | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\tcurl -fsSL -o php.tar.xz.asc \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor key in $GPG_KEYS; do \t\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \t\tdone; \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \t\tgpgconf --kill all; \t\trm -rf \"$GNUPGHOME\"; \tfi; \t\tapk del --no-network .fetch-deps","raw":"RUN set -eux; \t\tapk add --no-cache --virtual .fetch-deps gnupg; \t\tmkdir -p /usr/src; \tcd /usr/src; \t\tcurl -fsSL -o php.tar.xz \"$PHP_URL\"; \t\tif [ -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\" | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\tcurl -fsSL -o php.tar.xz.asc \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor key in $GPG_KEYS; do \t\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \t\tdone; \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \t\tgpgconf --kill all; \t\trm -rf \"$GNUPGHOME\"; \tfi; \t\tapk del --no-network .fetch-deps"},{"name":"COPY","lineno":101,"args":["docker-php-source","/usr/local/bin/"],"raw":"COPY docker-php-source /usr/local/bin/"},{"name":"RUN","lineno":130,"args":"set -eux; \tapk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\targon2-dev \t\tcoreutils \t\tcurl-dev \t\tlibedit-dev \t\tlibsodium-dev \t\tlibxml2-dev \t\tlinux-headers \t\toniguruma-dev \t\topenssl-dev \t\tsqlite-dev \t; \t\texport CFLAGS=\"$PHP_CFLAGS\" \t\tCPPFLAGS=\"$PHP_CPPFLAGS\" \t\tLDFLAGS=\"$PHP_LDFLAGS\" \t; \tdocker-php-source extract; \tcd /usr/src/php; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \t./configure \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t# make sure invalid --configure-flags are fatal errors intead of just warnings","raw":"RUN set -eux; \tapk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\targon2-dev \t\tcoreutils \t\tcurl-dev \t\tlibedit-dev \t\tlibsodium-dev \t\tlibxml2-dev \t\tlinux-headers \t\toniguruma-dev \t\topenssl-dev \t\tsqlite-dev \t; \t\texport CFLAGS=\"$PHP_CFLAGS\" \t\tCPPFLAGS=\"$PHP_CPPFLAGS\" \t\tLDFLAGS=\"$PHP_LDFLAGS\" \t; \tdocker-php-source extract; \tcd /usr/src/php; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \t./configure \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t# make sure invalid --configure-flags are fatal errors intead of just warnings"},{"name":"--ENABLE-OPTION-CHECKING=FATAL","lineno":133,"args":"# https://github.com/docker-library/php/issues/439","raw":"--enable-option-checking=fatal \t\t# https://github.com/docker-library/php/issues/439"},{"name":"--WITH-MHASH","lineno":136,"args":"# --enable-ftp is included here because ftp_ssl_connect() needs ftp to be compiled statically (see https://github.com/docker-library/php/issues/236)","raw":"--with-mhash \t\t# --enable-ftp is included here because ftp_ssl_connect() needs ftp to be compiled statically (see https://github.com/docker-library/php/issues/236)"},{"name":"--ENABLE-FTP","lineno":138,"args":"# --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)","raw":"--enable-ftp # --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)"},{"name":"--ENABLE-MBSTRING","lineno":140,"args":"# --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)","raw":"--enable-mbstring # --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)"},{"name":"--ENABLE-MYSQLND","lineno":142,"args":"# https://wiki.php.net/rfc/argon2_password_hash (7.2+)","raw":"--enable-mysqlnd # https://wiki.php.net/rfc/argon2_password_hash (7.2+)"},{"name":"--WITH-PASSWORD-ARGON2","lineno":144,"args":"# https://wiki.php.net/rfc/libsodium","raw":"--with-password-argon2 # https://wiki.php.net/rfc/libsodium"},{"name":"--WITH-SODIUM=SHARED","lineno":146,"args":"# always build against system sqlite3 (https://github.com/php/php-src/commit/6083a387a81dbbd66d6316a3a12a63f06d5f7109)","raw":"--with-sodium=shared # always build against system sqlite3 (https://github.com/php/php-src/commit/6083a387a81dbbd66d6316a3a12a63f06d5f7109)"},{"name":"--WITH-PDO-SQLITE=/USR","lineno":155,"args":"--with-sqlite3=/usr \t\t\t\t--with-curl \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib \t\t# in PHP 7.4+, the pecl/pear installers are officially deprecated (requiring an explicit \"--with-pear\") and will be removed in PHP 8+; see also https://github.com/docker-library/php/issues/846#issuecomment-505638494","raw":"--with-pdo-sqlite=/usr \t\t--with-sqlite3=/usr \t\t\t\t--with-curl \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib \t\t# in PHP 7.4+, the pecl/pear installers are officially deprecated (requiring an explicit \"--with-pear\") and will be removed in PHP 8+; see also https://github.com/docker-library/php/issues/846#issuecomment-505638494"},{"name":"--WITH-PEAR","lineno":158,"args":"# bundled pcre does not support JIT on s390x","raw":"--with-pear \t\t# bundled pcre does not support JIT on s390x"},{"name":"$(TEST","lineno":170,"args":"\"$gnuArch\" = 's390x-linux-musl' && echo '--without-pcre-jit') \t\t\t\t${PHP_EXTRA_CONFIGURE_ARGS:-} \t; \tmake -j \"$(nproc)\"; \tfind -type f -name '*.a' -delete; \tmake install; \tfind /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; \tmake clean; \t# https://github.com/docker-library/php/issues/692 (copy default example \"php.ini\" files somewhere easily discoverable)","raw":"$(test \"$gnuArch\" = 's390x-linux-musl' && echo '--without-pcre-jit') \t\t\t\t${PHP_EXTRA_CONFIGURE_ARGS:-} \t; \tmake -j \"$(nproc)\"; \tfind -type f -name '*.a' -delete; \tmake install; \tfind /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; \tmake clean; \t# https://github.com/docker-library/php/issues/692 (copy default example \"php.ini\" files somewhere easily discoverable)"},{"name":"CP","lineno":186,"args":"-v php.ini-* \"$PHP_INI_DIR/\"; \t\tcd /; \tdocker-php-source delete; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache $runDeps; \t\tapk del --no-network .build-deps; \t# update pecl channel definitions https://github.com/docker-library/php/issues/443","raw":"cp -v php.ini-* \"$PHP_INI_DIR/\"; \t\tcd /; \tdocker-php-source delete; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache $runDeps; \t\tapk del --no-network .build-deps; \t# update pecl channel definitions https://github.com/docker-library/php/issues/443"},{"name":"PECL","lineno":189,"args":"update-channels; \trm -rf /tmp/pear ~/.pearrc; # smoke test","raw":"pecl update-channels; \trm -rf /tmp/pear ~/.pearrc; # smoke test"},{"name":"PHP","lineno":190,"args":"--version","raw":"php --version"},{"name":"COPY","lineno":192,"args":["docker-php-ext-*","docker-php-entrypoint","/usr/local/bin/"],"raw":"COPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/"},{"name":"RUN","lineno":195,"args":"docker-php-ext-enable sodium","raw":"RUN docker-php-ext-enable sodium"},{"name":"ENTRYPOINT","lineno":197,"args":["docker-php-entrypoint"],"raw":"ENTRYPOINT [\"docker-php-entrypoint\"]"},{"name":"CMD","lineno":199,"args":["php","-a"],"raw":"CMD [\"php\", \"-a\"]"}]}