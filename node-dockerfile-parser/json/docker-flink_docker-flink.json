{"docker":[{"name":"FROM","lineno":19,"args":"openjdk:8-jre","raw":"FROM openjdk:8-jre"},{"name":"RUN","lineno":25,"args":"set -ex;   apt-get update;   apt-get -y install libsnappy1v5 gettext-base;   rm -rf /var/lib/apt/lists/*","raw":"RUN set -ex;   apt-get update;   apt-get -y install libsnappy1v5 gettext-base;   rm -rf /var/lib/apt/lists/*"},{"name":"ENV","lineno":28,"args":{"GOSU_VERSION":"1.11"},"raw":"ENV GOSU_VERSION 1.11"},{"name":"RUN","lineno":44,"args":"set -ex;   wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\";   wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\";   export GNUPGHOME=\"$(mktemp -d)\";   for server in ha.pool.sks-keyservers.net $(shuf -e                           hkp://p80.pool.sks-keyservers.net:80                           keyserver.ubuntu.com                           hkp://keyserver.ubuntu.com:80                           pgp.mit.edu) ; do       gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || : ;   done &&   gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;   gpgconf --kill all;   rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc;   chmod +x /usr/local/bin/gosu;   gosu nobody true","raw":"RUN set -ex;   wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\";   wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\";   export GNUPGHOME=\"$(mktemp -d)\";   for server in ha.pool.sks-keyservers.net $(shuf -e                           hkp://p80.pool.sks-keyservers.net:80                           keyserver.ubuntu.com                           hkp://keyserver.ubuntu.com:80                           pgp.mit.edu) ; do       gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || : ;   done &&   gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;   gpgconf --kill all;   rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc;   chmod +x /usr/local/bin/gosu;   gosu nobody true"},{"name":"ENV","lineno":49,"args":{"FLINK_VERSION":"1.9.2","SCALA_VERSION":"2.12","GPG_KEY":"EF88474C564C7A608A822EEC3FF96A2057B6476C"},"raw":"ENV FLINK_VERSION=1.9.2     SCALA_VERSION=2.12     GPG_KEY=EF88474C564C7A608A822EEC3FF96A2057B6476C"},{"name":"ENV","lineno":52,"args":{"FLINK_HOME":"/opt/flink"},"raw":"ENV FLINK_HOME=/opt/flink"},{"name":"ENV","lineno":53,"args":{"PATH":"$FLINK_HOME/bin:$PATH"},"raw":"ENV PATH=$FLINK_HOME/bin:$PATH"},{"name":"RUN","lineno":55,"args":"groupadd --system --gid=9999 flink &&     useradd --system --home-dir $FLINK_HOME --uid=9999 --gid=flink flink","raw":"RUN groupadd --system --gid=9999 flink &&     useradd --system --home-dir $FLINK_HOME --uid=9999 --gid=flink flink"},{"name":"WORKDIR","lineno":56,"args":"$FLINK_HOME","raw":"WORKDIR $FLINK_HOME"},{"name":"ENV","lineno":58,"args":{"FLINK_URL_FILE_PATH":"flink/flink-${FLINK_VERSION}/flink-${FLINK_VERSION}-bin-scala_${SCALA_VERSION}.tgz"},"raw":"ENV FLINK_URL_FILE_PATH=flink/flink-${FLINK_VERSION}/flink-${FLINK_VERSION}-bin-scala_${SCALA_VERSION}.tgz"},{"name":"ENV","lineno":60,"args":{"FLINK_TGZ_URL":"https://www.apache.org/dyn/closer.cgi"},"raw":"ENV FLINK_TGZ_URL=https://www.apache.org/dyn/closer.cgi"},{"name":"ACTION=DOWNLOAD&FILENAME=${FLINK_URL_FILE_PATH}","lineno":62,"args":"FLINK_ASC_URL=https://www.apache.org/dist/${FLINK_URL_FILE_PATH}.asc","raw":"action=download&filename=${FLINK_URL_FILE_PATH}     FLINK_ASC_URL=https://www.apache.org/dist/${FLINK_URL_FILE_PATH}.asc"},{"name":"RUN","lineno":84,"args":"set -ex;   wget -nv -O flink.tgz \"$FLINK_TGZ_URL\";   wget -nv -O flink.tgz.asc \"$FLINK_ASC_URL\";     export GNUPGHOME=\"$(mktemp -d)\";   for server in ha.pool.sks-keyservers.net $(shuf -e                           hkp://p80.pool.sks-keyservers.net:80                           keyserver.ubuntu.com                           hkp://keyserver.ubuntu.com:80                           pgp.mit.edu) ; do       gpg --batch --keyserver \"$server\" --recv-keys \"$GPG_KEY\" && break || : ;   done &&   gpg --batch --verify flink.tgz.asc flink.tgz;   gpgconf --kill all;   rm -rf \"$GNUPGHOME\" flink.tgz.asc;     tar -xf flink.tgz --strip-components=1;   rm flink.tgz;     chown -R flink:flink .;","raw":"RUN set -ex;   wget -nv -O flink.tgz \"$FLINK_TGZ_URL\";   wget -nv -O flink.tgz.asc \"$FLINK_ASC_URL\";     export GNUPGHOME=\"$(mktemp -d)\";   for server in ha.pool.sks-keyservers.net $(shuf -e                           hkp://p80.pool.sks-keyservers.net:80                           keyserver.ubuntu.com                           hkp://keyserver.ubuntu.com:80                           pgp.mit.edu) ; do       gpg --batch --keyserver \"$server\" --recv-keys \"$GPG_KEY\" && break || : ;   done &&   gpg --batch --verify flink.tgz.asc flink.tgz;   gpgconf --kill all;   rm -rf \"$GNUPGHOME\" flink.tgz.asc;     tar -xf flink.tgz --strip-components=1;   rm flink.tgz;     chown -R flink:flink .;"},{"name":"COPY","lineno":87,"args":["docker-entrypoint.sh","/"],"raw":"COPY docker-entrypoint.sh /"},{"name":"ENTRYPOINT","lineno":88,"args":["/docker-entrypoint.sh"],"raw":"ENTRYPOINT [\"/docker-entrypoint.sh\"]"},{"name":"EXPOSE","lineno":89,"args":["6123","8081"],"raw":"EXPOSE 6123 8081"},{"name":"CMD","lineno":90,"args":["help"],"raw":"CMD [\"help\"]"}]}