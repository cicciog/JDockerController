{"docker":[{"name":"FROM","lineno":4,"args":"node:12-buster-slim","raw":"FROM node:12-buster-slim"},{"name":"ENV","lineno":7,"args":{"GOSU_VERSION":"1.11"},"raw":"ENV GOSU_VERSION 1.11"},{"name":"RUN","lineno":9,"args":"set -eux; # save list of currently installed packages for later so we can clean up","raw":"RUN set -eux; # save list of currently installed packages for later so we can clean up"},{"name":"SAVEDAPTMARK=\"$(APT-MARK","lineno":19,"args":"showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates dirmngr gnupg wget; \trm -rf /var/lib/apt/lists/*; \t\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \t# verify the signature","raw":"savedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates dirmngr gnupg wget; \trm -rf /var/lib/apt/lists/*; \t\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \t# verify the signature"},{"name":"EXPORT","lineno":26,"args":"GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tcommand -v gpgconf && gpgconf --kill all || :; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \t# clean up fetch dependencies","raw":"export GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tcommand -v gpgconf && gpgconf --kill all || :; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \t# clean up fetch dependencies"},{"name":"APT-MARK","lineno":32,"args":"auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\tchmod +x /usr/local/bin/gosu; # verify that the binary works","raw":"apt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\tchmod +x /usr/local/bin/gosu; # verify that the binary works"},{"name":"GOSU","lineno":34,"args":"--version; \tgosu nobody true","raw":"gosu --version; \tgosu nobody true"},{"name":"ENV","lineno":36,"args":{"NODE_ENV":"production"},"raw":"ENV NODE_ENV production"},{"name":"ENV","lineno":38,"args":{"GHOST_CLI_VERSION":"1.13.1"},"raw":"ENV GHOST_CLI_VERSION 1.13.1"},{"name":"RUN","lineno":41,"args":"set -eux; \tnpm install -g \"ghost-cli@$GHOST_CLI_VERSION\"; \tnpm cache clean --force","raw":"RUN set -eux; \tnpm install -g \"ghost-cli@$GHOST_CLI_VERSION\"; \tnpm cache clean --force"},{"name":"ENV","lineno":43,"args":{"GHOST_INSTALL":"/var/lib/ghost"},"raw":"ENV GHOST_INSTALL /var/lib/ghost"},{"name":"ENV","lineno":44,"args":{"GHOST_CONTENT":"/var/lib/ghost/content"},"raw":"ENV GHOST_CONTENT /var/lib/ghost/content"},{"name":"ENV","lineno":46,"args":{"GHOST_VERSION":"3.12.1"},"raw":"ENV GHOST_VERSION 3.12.1"},{"name":"RUN","lineno":54,"args":"set -eux; \tmkdir -p \"$GHOST_INSTALL\"; \tchown node:node \"$GHOST_INSTALL\"; \t\tgosu node ghost install \"$GHOST_VERSION\" --db sqlite3 --no-prompt --no-stack --no-setup --dir \"$GHOST_INSTALL\"; \t# Tell Ghost to listen on all ips and not prompt for additional configuration","raw":"RUN set -eux; \tmkdir -p \"$GHOST_INSTALL\"; \tchown node:node \"$GHOST_INSTALL\"; \t\tgosu node ghost install \"$GHOST_VERSION\" --db sqlite3 --no-prompt --no-stack --no-setup --dir \"$GHOST_INSTALL\"; \t# Tell Ghost to listen on all ips and not prompt for additional configuration"},{"name":"CD","lineno":59,"args":"\"$GHOST_INSTALL\"; \tgosu node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath \"$GHOST_CONTENT/data/ghost.db\"; \tgosu node ghost config paths.contentPath \"$GHOST_CONTENT\"; \t# make a config.json symlink for NODE_ENV=development (and sanity check that it's correct)","raw":"cd \"$GHOST_INSTALL\"; \tgosu node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath \"$GHOST_CONTENT/data/ghost.db\"; \tgosu node ghost config paths.contentPath \"$GHOST_CONTENT\"; \t# make a config.json symlink for NODE_ENV=development (and sanity check that it's correct)"},{"name":"GOSU","lineno":63,"args":"node ln -s config.production.json \"$GHOST_INSTALL/config.development.json\"; \treadlink -f \"$GHOST_INSTALL/config.development.json\"; \t# need to save initial content for pre-seeding empty volumes","raw":"gosu node ln -s config.production.json \"$GHOST_INSTALL/config.development.json\"; \treadlink -f \"$GHOST_INSTALL/config.development.json\"; \t# need to save initial content for pre-seeding empty volumes"},{"name":"MV","lineno":68,"args":"\"$GHOST_CONTENT\" \"$GHOST_INSTALL/content.orig\"; \tmkdir -p \"$GHOST_CONTENT\"; \tchown node:node \"$GHOST_CONTENT\"; \t# force install \"sqlite3\" manually since it's an optional dependency of \"ghost\"","raw":"mv \"$GHOST_CONTENT\" \"$GHOST_INSTALL/content.orig\"; \tmkdir -p \"$GHOST_CONTENT\"; \tchown node:node \"$GHOST_CONTENT\"; \t# force install \"sqlite3\" manually since it's an optional dependency of \"ghost\""},{"name":"CD","lineno":72,"args":"\"$GHOST_INSTALL/current\"; # scrape the expected version of sqlite3 directly from Ghost itself","raw":"cd \"$GHOST_INSTALL/current\"; # scrape the expected version of sqlite3 directly from Ghost itself"},{"name":"SQLITE3VERSION=\"$(NODE","lineno":75,"args":"-p 'require(\"./package.json\").optionalDependencies.sqlite3')\"; \tif ! gosu node yarn add \"sqlite3@$sqlite3Version\" --force; then # must be some non-amd64 architecture pre-built binaries aren't published for, so let's install some build deps and do-it-all-over-again","raw":"sqlite3Version=\"$(node -p 'require(\"./package.json\").optionalDependencies.sqlite3')\"; \tif ! gosu node yarn add \"sqlite3@$sqlite3Version\" --force; then # must be some non-amd64 architecture pre-built binaries aren't published for, so let's install some build deps and do-it-all-over-again"},{"name":"SAVEDAPTMARK=\"$(APT-MARK","lineno":91,"args":"showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends python make gcc g++ libc-dev; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgosu node yarn add \"sqlite3@$sqlite3Version\" --force --build-from-source; \t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \t\tapt-get purge -y --auto-remove; \tfi; \t\tgosu node yarn cache clean; \tgosu node npm cache clean --force; \tnpm cache clean --force; \trm -rv /tmp/yarn* /tmp/v8*","raw":"savedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends python make gcc g++ libc-dev; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgosu node yarn add \"sqlite3@$sqlite3Version\" --force --build-from-source; \t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \t\tapt-get purge -y --auto-remove; \tfi; \t\tgosu node yarn cache clean; \tgosu node npm cache clean --force; \tnpm cache clean --force; \trm -rv /tmp/yarn* /tmp/v8*"},{"name":"WORKDIR","lineno":93,"args":"$GHOST_INSTALL","raw":"WORKDIR $GHOST_INSTALL"},{"name":"VOLUME","lineno":94,"args":["$GHOST_CONTENT"],"raw":"VOLUME $GHOST_CONTENT"},{"name":"COPY","lineno":96,"args":["docker-entrypoint.sh","/usr/local/bin"],"raw":"COPY docker-entrypoint.sh /usr/local/bin"},{"name":"ENTRYPOINT","lineno":97,"args":["docker-entrypoint.sh"],"raw":"ENTRYPOINT [\"docker-entrypoint.sh\"]"},{"name":"EXPOSE","lineno":99,"args":["2368"],"raw":"EXPOSE 2368"},{"name":"CMD","lineno":100,"args":["node","current/index.js"],"raw":"CMD [\"node\", \"current/index.js\"]"}]}