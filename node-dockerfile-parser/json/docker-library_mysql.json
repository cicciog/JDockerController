{"docker":[{"name":"FROM","lineno":1,"args":"debian:buster-slim","raw":"FROM debian:buster-slim"},{"name":"RUN","lineno":4,"args":"groupadd -r mysql && useradd -r -g mysql mysql","raw":"RUN groupadd -r mysql && useradd -r -g mysql mysql"},{"name":"RUN","lineno":6,"args":"apt-get update && apt-get install -y --no-install-recommends gnupg dirmngr && rm -rf /var/lib/apt/lists/*","raw":"RUN apt-get update && apt-get install -y --no-install-recommends gnupg dirmngr && rm -rf /var/lib/apt/lists/*"},{"name":"ENV","lineno":9,"args":{"GOSU_VERSION":"1.7"},"raw":"ENV GOSU_VERSION 1.7"},{"name":"RUN","lineno":21,"args":"set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& gpgconf --kill all \t&& rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu \t&& gosu nobody true \t&& apt-get purge -y --auto-remove ca-certificates wget","raw":"RUN set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& gpgconf --kill all \t&& rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu \t&& gosu nobody true \t&& apt-get purge -y --auto-remove ca-certificates wget"},{"name":"RUN","lineno":23,"args":"mkdir /docker-entrypoint-initdb.d","raw":"RUN mkdir /docker-entrypoint-initdb.d"},{"name":"RUN","lineno":26,"args":"apt-get update && apt-get install -y --no-install-recommends # for MYSQL_RANDOM_ROOT_PASSWORD","raw":"RUN apt-get update && apt-get install -y --no-install-recommends # for MYSQL_RANDOM_ROOT_PASSWORD"},{"name":"PWGEN","lineno":28,"args":"# for mysql_ssl_rsa_setup","raw":"pwgen # for mysql_ssl_rsa_setup"},{"name":"OPENSSL","lineno":30,"args":"# FATAL ERROR: please install the following Perl modules before executing /usr/local/mysql/scripts/mysql_install_db:","raw":"openssl # FATAL ERROR: please install the following Perl modules before executing /usr/local/mysql/scripts/mysql_install_db:"},{"name":"PERL","lineno":36,"args":"# install \"xz-utils\" for .sql.xz docker-entrypoint-initdb.d files","raw":"perl # install \"xz-utils\" for .sql.xz docker-entrypoint-initdb.d files"},{"name":"XZ-UTILS","lineno":38,"args":"&& rm -rf /var/lib/apt/lists/*","raw":"xz-utils \t&& rm -rf /var/lib/apt/lists/*"},{"name":"RUN","lineno":41,"args":"set -ex; # gpg: key 5072E1F5: public key \"MySQL Release Engineering <mysql-build@oss.oracle.com>\" imported","raw":"RUN set -ex; # gpg: key 5072E1F5: public key \"MySQL Release Engineering <mysql-build@oss.oracle.com>\" imported"},{"name":"KEY='A4A9406876FCBD3C456770C88C718D3B5072E1F5';","lineno":48,"args":"export GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/mysql.gpg; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list > /dev/null","raw":"key='A4A9406876FCBD3C456770C88C718D3B5072E1F5'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/mysql.gpg; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list > /dev/null"},{"name":"ENV","lineno":50,"args":{"MYSQL_MAJOR":"5.7"},"raw":"ENV MYSQL_MAJOR 5.7"},{"name":"ENV","lineno":51,"args":{"MYSQL_VERSION":"5.7.29-1debian10"},"raw":"ENV MYSQL_VERSION 5.7.29-1debian10"},{"name":"RUN","lineno":53,"args":"echo \"deb http://repo.mysql.com/apt/debian/ buster mysql-${MYSQL_MAJOR}\" > /etc/apt/sources.list.d/mysql.list","raw":"RUN echo \"deb http://repo.mysql.com/apt/debian/ buster mysql-${MYSQL_MAJOR}\" > /etc/apt/sources.list.d/mysql.list"},{"name":"RUN","lineno":66,"args":"{ \t\techo mysql-community-server mysql-community-server/data-dir select ''; \t\techo mysql-community-server mysql-community-server/root-pass password ''; \t\techo mysql-community-server mysql-community-server/re-root-pass password ''; \t\techo mysql-community-server mysql-community-server/remove-test-db select false; \t} | debconf-set-selections \t&& apt-get update && apt-get install -y mysql-server=\"${MYSQL_VERSION}\" && rm -rf /var/lib/apt/lists/* \t&& rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql /var/run/mysqld \t&& chown -R mysql:mysql /var/lib/mysql /var/run/mysqld # ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime","raw":"RUN { \t\techo mysql-community-server mysql-community-server/data-dir select ''; \t\techo mysql-community-server mysql-community-server/root-pass password ''; \t\techo mysql-community-server mysql-community-server/re-root-pass password ''; \t\techo mysql-community-server mysql-community-server/remove-test-db select false; \t} | debconf-set-selections \t&& apt-get update && apt-get install -y mysql-server=\"${MYSQL_VERSION}\" && rm -rf /var/lib/apt/lists/* \t&& rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql /var/run/mysqld \t&& chown -R mysql:mysql /var/lib/mysql /var/run/mysqld # ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime"},{"name":"&&","lineno":68,"args":"chmod 777 /var/run/mysqld # comment out a few problematic configuration values","raw":"&& chmod 777 /var/run/mysqld # comment out a few problematic configuration values"},{"name":"&&","lineno":72,"args":"find /etc/mysql/ -name '*.cnf' -print0 \t\t| xargs -0 grep -lZE '^(bind-address|log)' \t\t| xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' # don't reverse lookup hostnames, they are usually another container","raw":"&& find /etc/mysql/ -name '*.cnf' -print0 \t\t| xargs -0 grep -lZE '^(bind-address|log)' \t\t| xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' # don't reverse lookup hostnames, they are usually another container"},{"name":"&&","lineno":73,"args":"echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf","raw":"&& echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf"},{"name":"VOLUME","lineno":75,"args":["/var/lib/mysql"],"raw":"VOLUME /var/lib/mysql"},{"name":"COPY","lineno":77,"args":["docker-entrypoint.sh","/usr/local/bin/"],"raw":"COPY docker-entrypoint.sh /usr/local/bin/"},{"name":"RUN","lineno":78,"args":"ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat","raw":"RUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat"},{"name":"ENTRYPOINT","lineno":79,"args":["docker-entrypoint.sh"],"raw":"ENTRYPOINT [\"docker-entrypoint.sh\"]"},{"name":"EXPOSE","lineno":81,"args":["3306","33060"],"raw":"EXPOSE 3306 33060"},{"name":"CMD","lineno":82,"args":["mysqld"],"raw":"CMD [\"mysqld\"]"}]}